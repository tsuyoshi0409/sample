# Generated by Django 4.1.5 on 2023-01-16 11:24

import app.models
import concurrency.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assy',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('assy_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='接合品ID')),
                ('assy_name', models.CharField(max_length=256, verbose_name='接合品名')),
                ('matl_type', models.IntegerField(verbose_name='品目種類')),
            ],
            options={
                'db_table': 'assy',
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('child_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='子品目ID')),
                ('child_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='品名')),
                ('child_figure_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='図番')),
                ('material_big', models.IntegerField(blank=True, null=True, verbose_name='材料種類')),
                ('material_shape', models.CharField(blank=True, max_length=100, null=True, verbose_name='材料形状')),
                ('material_sml_txt', models.CharField(blank=True, max_length=100, null=True, verbose_name='材質')),
                ('material_symbol', models.CharField(blank=True, max_length=100, null=True, verbose_name='記号')),
                ('hardness', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬度・仕上げ')),
                ('sheet_thickness', models.IntegerField(blank=True, null=True, verbose_name='板厚')),
                ('material_size_w', models.IntegerField(blank=True, null=True, verbose_name='材料サイズW')),
                ('material_size_l', models.IntegerField(blank=True, null=True, verbose_name='材料サイズL')),
                ('imposition_amount_piece_seat', models.IntegerField(blank=True, null=True, verbose_name='面付け数個/シート')),
                ('imposition_amount_piece_flame', models.IntegerField(blank=True, null=True, verbose_name='面付け数個/フレーム')),
                ('imposition_amount_flame_seat', models.IntegerField(blank=True, null=True, verbose_name='面付け数フレーム/シート')),
                ('fixes', models.TextField(blank=True, null=True, verbose_name='確認事項')),
                ('size_x', models.FloatField(blank=True, null=True, verbose_name='製品サイズX')),
                ('size_y', models.FloatField(blank=True, null=True, verbose_name='製品サイズY')),
            ],
            options={
                'db_table': 'child',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('company_id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='外注先ID')),
                ('company_name', models.CharField(max_length=100, verbose_name='外注先名')),
                ('company_name2', models.CharField(max_length=100, verbose_name='外注先表示名\t')),
                ('item', models.CharField(blank=True, max_length=100, null=True, verbose_name='対象品目')),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('customer_id', models.IntegerField(primary_key=True, serialize=False, verbose_name='商魂ID')),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='顧客名')),
                ('customer_name2', models.CharField(blank=True, max_length=100, null=True, verbose_name='顧客表示名')),
                ('assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assistant', to=settings.AUTH_USER_MODEL, verbose_name='アシスタント')),
                ('production_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='production_control', to=settings.AUTH_USER_MODEL, verbose_name='生産管理担当者')),
                ('sales', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sales', to=settings.AUTH_USER_MODEL, verbose_name='営業担当')),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('material_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='原材料ID')),
                ('material_shape', models.CharField(blank=True, max_length=100, null=True, verbose_name='材料形状')),
                ('material_sml_txt', models.CharField(blank=True, max_length=100, null=True, verbose_name='材質')),
                ('material_symbol', models.CharField(blank=True, max_length=100, null=True, verbose_name='記号')),
                ('hardness', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬度・仕上げ')),
                ('sheet_thickness', models.IntegerField(blank=True, null=True, verbose_name='板厚')),
                ('material_size_w', models.IntegerField(blank=True, null=True, verbose_name='材料サイズW')),
                ('material_size_l', models.IntegerField(blank=True, null=True, verbose_name='材料サイズL')),
            ],
            options={
                'db_table': 'material',
            },
        ),
        migrations.CreateModel(
            name='Matl',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='品目SID')),
                ('matl_id', models.CharField(max_length=128, verbose_name='品目ID')),
                ('matl_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='品目名')),
                ('unit', models.CharField(blank=True, max_length=16, null=True, verbose_name='基本単位')),
                ('matl_type', models.IntegerField(blank=True, null=True, verbose_name='品目種類')),
                ('product_type', models.IntegerField(blank=True, null=True, verbose_name='量産/非量産')),
                ('order_flg', models.IntegerField(blank=True, null=True, verbose_name='オーダー可能フラグ')),
            ],
            options={
                'db_table': 'matl',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('parent_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='親品目ID')),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='ステータス')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('scrutiny_at', models.DateTimeField(blank=True, null=True, verbose_name='精査日時')),
                ('order_status', models.IntegerField(blank=True, null=True, verbose_name='受注状況')),
                ('assy', models.IntegerField(blank=True, null=True, verbose_name='積層品')),
                ('parent_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='品名')),
                ('parent_figure_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='図番')),
                ('estimate_answer', models.DateField(blank=True, null=True, verbose_name='見積回答')),
                ('desired_delivery_date', models.DateField(blank=True, null=True, verbose_name='希望納期')),
                ('necessary_amount', models.CharField(blank=True, max_length=100, null=True, verbose_name='必要数')),
                ('material_big', models.IntegerField(blank=True, null=True, verbose_name='材料種類')),
                ('material_shape', models.CharField(blank=True, max_length=100, null=True, verbose_name='材料形状')),
                ('material_sml_txt', models.CharField(blank=True, max_length=100, null=True, verbose_name='材質')),
                ('material_symbol', models.CharField(blank=True, max_length=100, null=True, verbose_name='記号')),
                ('hardness', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬度・仕上げ')),
                ('sheet_thickness', models.IntegerField(blank=True, null=True, verbose_name='板厚')),
                ('material_size_w', models.IntegerField(blank=True, null=True, verbose_name='材料サイズW')),
                ('material_size_l', models.IntegerField(blank=True, null=True, verbose_name='材料サイズL')),
                ('delivery_form', models.IntegerField(blank=True, null=True, verbose_name='納入形態')),
                ('sales_prior_information', models.TextField(blank=True, null=True, verbose_name='連絡事項（営業部門）')),
                ('file_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='ファイルネーム')),
                ('file_created_at', models.DateTimeField(blank=True, null=True, verbose_name='ファイル最終更新')),
                ('file', models.FileField(blank=True, null=True, upload_to=app.models.Parent.get_upload_path, verbose_name='ファイル')),
                ('supply_data_file', models.FileField(blank=True, null=True, upload_to='supply_data/%Y/%m/%d/', verbose_name='支給データ')),
                ('similar_directions_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='類似指示書No.')),
                ('product_affinity_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='類似FMNo.')),
                ('assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='assistant2', to=settings.AUTH_USER_MODEL, verbose_name='アシスタント')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='作成者')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.customer', verbose_name='顧客')),
                ('file_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='file_author', to=settings.AUTH_USER_MODEL, verbose_name='ファイル登録者')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='manager', to=settings.AUTH_USER_MODEL, verbose_name='担当者')),
                ('material_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.material', verbose_name='原材料ID')),
                ('production_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='production_control2', to=settings.AUTH_USER_MODEL, verbose_name='生産管理担当者')),
                ('sales', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sales2', to=settings.AUTH_USER_MODEL, verbose_name='営業担当')),
                ('scrutinizer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='scrutinizer', to=settings.AUTH_USER_MODEL, verbose_name='精査者')),
            ],
            options={
                'db_table': 'parent',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='資源ID')),
                ('resource_name', models.CharField(max_length=256, verbose_name='資源名')),
            ],
            options={
                'db_table': 'resource',
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('part_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='部品ID')),
                ('part_name', models.CharField(max_length=256, verbose_name='部品名')),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.company', verbose_name='仕入先ID')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID')),
            ],
            options={
                'db_table': 'part',
            },
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('operation_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='作業ID')),
                ('operation_name', models.CharField(max_length=256, verbose_name='作業名')),
                ('is_outsourcing', models.IntegerField(verbose_name='社内or外注')),
                ('child_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.child', verbose_name='子品目ID')),
                ('company_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.company', verbose_name='外注先ID')),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID')),
            ],
            options={
                'db_table': 'operation',
            },
        ),
        migrations.CreateModel(
            name='Ope',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='作業SID')),
                ('ope_id', models.CharField(max_length=128, verbose_name='作業ID')),
                ('ope_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='作業名')),
                ('matl_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.matl', verbose_name='品目ID')),
                ('out_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.company', verbose_name='外注先ID')),
            ],
            options={
                'db_table': 'ope',
            },
        ),
        migrations.CreateModel(
            name='Mask',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('mask_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='マスクID')),
                ('imposition_amount_piece_seat', models.IntegerField(blank=True, null=True, verbose_name='面付け数個/シート')),
                ('imposition_amount_piece_flame', models.IntegerField(blank=True, null=True, verbose_name='面付け数個/フレーム')),
                ('imposition_amount_flame_seat', models.IntegerField(blank=True, null=True, verbose_name='面付け数フレーム/シート')),
                ('drop_technique', models.IntegerField(blank=True, null=True, verbose_name='落下方法')),
                ('correction', models.FloatField(blank=True, null=True, verbose_name='補正')),
                ('without_fee', models.IntegerField(blank=True, null=True, verbose_name='抜き代')),
                ('pitch_correction', models.IntegerField(blank=True, null=True, verbose_name='ピッチ補正')),
                ('direction_x', models.IntegerField(blank=True, null=True, verbose_name='X方向補正')),
                ('direction_y', models.IntegerField(blank=True, null=True, verbose_name='Y方向補正')),
                ('roll_technique', models.IntegerField(blank=True, null=True, verbose_name='ロール方向')),
                ('roll_technique_list', models.IntegerField(blank=True, null=True, verbose_name='図面に対して（方向）')),
                ('facts_simultaneous_imposition', models.IntegerField(blank=True, null=True, verbose_name='同時面付け（有無）')),
                ('facts_kind', models.CharField(blank=True, max_length=100, null=True, verbose_name='同時面付け数(種類)')),
                ('mask_measurement', models.IntegerField(blank=True, null=True, verbose_name='マスク測定')),
                ('exposure_technique', models.IntegerField(blank=True, null=True, verbose_name='自動露光仕様')),
                ('face_interval_direction_x', models.FloatField(blank=True, null=True, verbose_name='面間隔X方向')),
                ('face_interval_direction_y', models.FloatField(blank=True, null=True, verbose_name='面間隔Y方向')),
                ('line_overlap_direction_x', models.IntegerField(blank=True, null=True, verbose_name='線重ねX方向')),
                ('line_overlap_direction_y', models.IntegerField(blank=True, null=True, verbose_name='線重ねY方向')),
                ('imposition_amount_direction_x', models.IntegerField(blank=True, null=True, verbose_name='X方向面付け数')),
                ('imposition_amount_direction_y', models.IntegerField(blank=True, null=True, verbose_name='Y方向面付け数')),
                ('cut_line_key', models.IntegerField(blank=True, null=True, verbose_name='カットライン')),
                ('cut_line_val', models.IntegerField(blank=True, null=True, verbose_name='カットライン寸法')),
                ('bridge_product_department_1', models.IntegerField(blank=True, null=True, verbose_name='製品部ヶ所')),
                ('bridge_product_department_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='(製品部以外)')),
                ('bridge_product_department_3', models.IntegerField(blank=True, null=True, verbose_name='ヶ所')),
                ('bridgeform_product_department_1', models.IntegerField(blank=True, null=True, verbose_name='ブリッジ形状製品部')),
                ('bridgeform_product_department_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='(製品部以外2)')),
                ('bridgeform_product_department_3', models.IntegerField(blank=True, null=True, verbose_name='(製品部以外ブリッジ形状)')),
                ('bridge_size_1', models.IntegerField(blank=True, null=True, verbose_name='製品部ブリッジ寸法A')),
                ('bridge_size_2', models.IntegerField(blank=True, null=True, verbose_name='製品部ブリッジ寸法B')),
                ('bridge_size_3', models.IntegerField(blank=True, null=True, verbose_name='製品部ブリッジ寸法C')),
                ('bridge_size_4', models.IntegerField(blank=True, null=True, verbose_name='製品部ブリッジ寸法D')),
                ('other_bridge_size_1', models.IntegerField(blank=True, null=True, verbose_name='その他ブリッジ寸法A')),
                ('other_bridge_size_2', models.IntegerField(blank=True, null=True, verbose_name='その他ブリッジ寸法B')),
                ('other_bridge_size_3', models.IntegerField(blank=True, null=True, verbose_name='その他ブリッジ寸法C')),
                ('other_bridge_size_4', models.IntegerField(blank=True, null=True, verbose_name='その他ブリッジ寸法D')),
                ('other_notice_facts', models.TextField(blank=True, null=True, verbose_name='その他注意事項')),
                ('size_x', models.FloatField(blank=True, null=True, verbose_name='製品サイズX')),
                ('size_y', models.FloatField(blank=True, null=True, verbose_name='製品サイズY')),
                ('child_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.child', verbose_name='子品目ID')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID')),
            ],
            options={
                'db_table': 'mask',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('comment_id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='コメントID')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='コメント')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID')),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='投稿者')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='ChildOperation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('index', models.IntegerField(verbose_name='工程順')),
                ('child_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.child', verbose_name='子品目ID')),
                ('operation_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.operation', verbose_name='作業ID')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID')),
            ],
            options={
                'db_table': 'child_operation',
            },
        ),
        migrations.AddField(
            model_name='child',
            name='material_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.material', verbose_name='原材料ID'),
        ),
        migrations.AddField(
            model_name='child',
            name='parent_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID'),
        ),
        migrations.CreateModel(
            name='Bor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matl_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.matl', verbose_name='品目ID')),
                ('ope_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ope', verbose_name='作業ID')),
                ('resource_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.resource', verbose_name='資源ID')),
            ],
            options={
                'db_table': 'bor',
            },
        ),
        migrations.CreateModel(
            name='Bom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_type', models.IntegerField(verbose_name='品目種類')),
                ('child_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_id', to='app.matl', verbose_name='子品目ID')),
                ('operation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ope', verbose_name='作業ID')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_id', to='app.matl', verbose_name='親品目ID')),
            ],
            options={
                'db_table': 'bom',
            },
        ),
        migrations.CreateModel(
            name='Bell',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_number', models.IntegerField(verbose_name='メッセージNo.')),
                ('is_active', models.BooleanField(default=True, verbose_name='アクティブ')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('parent_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.parent', verbose_name='親品目ID')),
                ('updated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updated_user', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'db_table': 'bell',
            },
        ),
        migrations.CreateModel(
            name='AssyChild',
            fields=[
                ('version', concurrency.fields.AutoIncVersionField(default=0, help_text='record revision number')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sheets', models.IntegerField(verbose_name='枚数')),
                ('assy_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.assy', verbose_name='接合品ID')),
                ('child_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.child', verbose_name='子品目ID')),
            ],
            options={
                'db_table': 'assy_child',
            },
        ),
        migrations.AddField(
            model_name='assy',
            name='parent_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_id2', to='app.parent', verbose_name='親品目ID'),
        ),
    ]
